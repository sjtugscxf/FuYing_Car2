###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        28/Jun/2017  11:22:49
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\GitHub_pository\FuYing_Car2\source\PIT.c
#    Command line =  
#        D:\GitHub_pository\FuYing_Car2\source\PIT.c -D LPLD_K60 -lCN
#        D:\GitHub_pository\FuYing_Car2\RAM\List\ -lB
#        D:\GitHub_pository\FuYing_Car2\RAM\List\ -o
#        D:\GitHub_pository\FuYing_Car2\RAM\Obj\ --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\GitHub_pository\FuYing_Car2\..\app\ -I
#        D:\GitHub_pository\FuYing_Car2\source\ -I
#        D:\GitHub_pository\FuYing_Car2\common\ -I
#        D:\GitHub_pository\FuYing_Car2\LPLD\ -I
#        D:\GitHub_pository\FuYing_Car2\LPLD\HW\ -I
#        D:\GitHub_pository\FuYing_Car2\LPLD\DEV\ -I
#        D:\GitHub_pository\FuYing_Car2\iar_config_files\ -Ol -I "C:\Program
#        Files (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  D:\GitHub_pository\FuYing_Car2\RAM\List\PIT.lst
#    Object file  =  D:\GitHub_pository\FuYing_Car2\RAM\Obj\PIT.o
#
###############################################################################

D:\GitHub_pository\FuYing_Car2\source\PIT.c
      1          /*
      2          Arthor : Qian Qiyang (KisaragiAyanoo@twitter)
      3          Date : 2015/12/01
      4          License : MIT
      5          */
      6          
      7          #include "includes.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0xF010 0x021F      ANDS     R2,R0,#0x1F
   \   00000006   0x4091             LSLS     R1,R1,R2
   \   00000008   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0xe000e100
   \   0000000C   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000E   0x0940             LSRS     R0,R0,#+5
   \   00000010   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   00000014   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     NVIC_SetPriority: (+1)
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD509             BPL.N    ??NVIC_SetPriority_0
   \   00000006   0x0109             LSLS     R1,R1,#+4
   \   00000008   0x.... 0x....      LDR.W    R2,??DataTable9_1  ;; 0xe000ed18
   \   0000000C   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000E   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   00000012   0x1880             ADDS     R0,R0,R2
   \   00000014   0xF800 0x1C04      STRB     R1,[R0, #-4]
   \   00000018   0xE004             B.N      ??NVIC_SetPriority_1
   \                     ??NVIC_SetPriority_0: (+1)
   \   0000001A   0x0109             LSLS     R1,R1,#+4
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable9_2  ;; 0xe000e400
   \   00000020   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000022   0x5481             STRB     R1,[R0, R2]
   \                     ??NVIC_SetPriority_1: (+1)
   \   00000024   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp uint32_t NVIC_EncodePriority(uint32_t, uint32_t, uint32_t)
   \                     NVIC_EncodePriority: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xF010 0x0007      ANDS     R0,R0,#0x7
   \   00000006   0xF1D0 0x0307      RSBS     R3,R0,#+7
   \   0000000A   0x2B05             CMP      R3,#+5
   \   0000000C   0xD301             BCC.N    ??NVIC_EncodePriority_0
   \   0000000E   0x2304             MOVS     R3,#+4
   \   00000010   0xE001             B.N      ??NVIC_EncodePriority_1
   \                     ??NVIC_EncodePriority_0: (+1)
   \   00000012   0xF1D0 0x0307      RSBS     R3,R0,#+7
   \                     ??NVIC_EncodePriority_1: (+1)
   \   00000016   0x1D04             ADDS     R4,R0,#+4
   \   00000018   0x2C07             CMP      R4,#+7
   \   0000001A   0xD201             BCS.N    ??NVIC_EncodePriority_2
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE000             B.N      ??NVIC_EncodePriority_3
   \                     ??NVIC_EncodePriority_2: (+1)
   \   00000020   0x1EC0             SUBS     R0,R0,#+3
   \                     ??NVIC_EncodePriority_3: (+1)
   \   00000022   0x2401             MOVS     R4,#+1
   \   00000024   0xFA14 0xF303      LSLS     R3,R4,R3
   \   00000028   0x1E5B             SUBS     R3,R3,#+1
   \   0000002A   0x4019             ANDS     R1,R3,R1
   \   0000002C   0x4081             LSLS     R1,R1,R0
   \   0000002E   0x2301             MOVS     R3,#+1
   \   00000030   0xFA13 0xF000      LSLS     R0,R3,R0
   \   00000034   0x1E40             SUBS     R0,R0,#+1
   \   00000036   0x4010             ANDS     R0,R0,R2
   \   00000038   0x4308             ORRS     R0,R0,R1
   \   0000003A   0xBC10             POP      {R4}
   \   0000003C   0x4770             BX       LR               ;; return
      8          
      9          
     10          // ========= Variables =========
     11          
     12          //--- global ---

   \                                 In section .bss, align 4
     13          U32 time_us = 0;
   \                     time_us:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     14          U32 pit0_time;
   \                     pit0_time:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     15          U32 pit1_time; 
   \                     pit1_time:
   \   00000000                      DS8 4
     16          
     17          
     18           
     19          //--- local ---

   \                                 In section .bss, align 4
     20          U32 pit1_time_tmp;
   \                     pit1_time_tmp:
   \   00000000                      DS8 4
     21          
     22          // =========== PID CONTROL =========== 

   \                                 In section .bss, align 8
     23          PIDInfo L, R;  //两个结构体指针，存与电机pid控制有关的量， 包括pid三个参数，lastErr
   \                     L:
   \   00000000                      DS8 56

   \                                 In section .bss, align 8
   \                     R:
   \   00000000                      DS8 56

   \                                 In section .bss, align 8
     24          double L_err = 0;
   \                     L_err:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
     25          double R_err = 0;
   \                     R_err:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
     26          double L_pwm = 0;
   \                     L_pwm:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
     27          double R_pwm = 0;
   \                     R_pwm:
   \   00000000                      DS8 8
     28          
     29          
     30          

   \                                 In section .bss, align 2
     31          int16 speed_set = 0;
   \                     speed_set:
   \   00000000                      DS8 2
     32          

   \                                 In section .text, align 2, keep-with-next
     33          void PID_Init() 
     34          {
     35            L.kp = 5;
   \                     PID_Init: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x40140000
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   0000000A   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     36            L.ki = 2;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   00000018   0xE9C2 0x0102      STRD     R0,R1,[R2, #+8]
     37            L.kd = 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   00000024   0xE9C2 0x0104      STRD     R0,R1,[R2, #+16]
     38            R.kp = 5;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x40140000
   \   0000002E   0x.... 0x....      LDR.W    R2,??DataTable9_5
   \   00000032   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     39            R.ki = 2;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable9_5
   \   00000040   0xE9C2 0x0102      STRD     R0,R1,[R2, #+8]
     40            R.kd = 0;
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x2100             MOVS     R1,#+0
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable9_5
   \   0000004C   0xE9C2 0x0104      STRD     R0,R1,[R2, #+16]
     41            
     42            L.lastErr=0;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   00000058   0xE9C2 0x0106      STRD     R0,R1,[R2, #+24]
     43            L.errSum=0;
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   00000064   0xE9C2 0x010C      STRD     R0,R1,[R2, #+48]
     44            R.lastErr=0;
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0x.... 0x....      LDR.W    R2,??DataTable9_5
   \   00000070   0xE9C2 0x0106      STRD     R0,R1,[R2, #+24]
     45            R.errSum=0;
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0x2100             MOVS     R1,#+0
   \   00000078   0x.... 0x....      LDR.W    R2,??DataTable9_5
   \   0000007C   0xE9C2 0x010C      STRD     R0,R1,[R2, #+48]
     46          
     47            //临时测试用：
     48            debug_dir.kp=0;
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x2100             MOVS     R1,#+0
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable9_6
   \   00000088   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     49            debug_dir.kd=0;
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x2100             MOVS     R1,#+0
   \   00000090   0x.... 0x....      LDR.W    R2,??DataTable9_6
   \   00000094   0xE9C2 0x0104      STRD     R0,R1,[R2, #+16]
     50            
     51          }
   \   00000098   0x4770             BX       LR               ;; return
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void PWM(u8 left_speed, u8 right_speed, PIDInfo *L, PIDInfo *R)      //前进的PID控制
     54          {  
   \                     PWM: (+1)
   \   00000000   0xE92D 0x4370      PUSH     {R4-R6,R8,R9,LR}
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
     55            L_err=left_speed-tacho0;
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable9_7
   \   00000010   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000014   0x1A40             SUBS     R0,R0,R1
   \   00000016   0x.... 0x....      BL       __aeabi_i2d
   \   0000001A   0x.... 0x....      LDR.W    R2,??DataTable9_8
   \   0000001E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     56            R_err=right_speed+tacho1;
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   00000026   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000002A   0xFA50 0xF084      UXTAB    R0,R0,R4
   \   0000002E   0x.... 0x....      BL       __aeabi_i2d
   \   00000032   0x.... 0x....      LDR.W    R2,??DataTable9_10
   \   00000036   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     57            L->errSum+=L_err;
   \   0000003A   0xE9D5 0x230C      LDRD     R2,R3,[R5, #+48]
   \   0000003E   0x.... 0x....      LDR.W    R4,??DataTable9_8
   \   00000042   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \   00000046   0x.... 0x....      BL       __aeabi_dadd
   \   0000004A   0xE9C5 0x010C      STRD     R0,R1,[R5, #+48]
     58            if(L->errSum>300) L->errSum=300;
   \   0000004E   0xE9D5 0x010C      LDRD     R0,R1,[R5, #+48]
   \   00000052   0x2201             MOVS     R2,#+1
   \   00000054   0x.... 0x....      LDR.W    R3,??DataTable9_11  ;; 0x4072c000
   \   00000058   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000005C   0xD804             BHI.N    ??PWM_0
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable9_11  ;; 0x4072c000
   \   00000064   0xE9C5 0x010C      STRD     R0,R1,[R5, #+48]
     59            if(L->errSum<-300) L->errSum=-300;
   \                     ??PWM_0: (+1)
   \   00000068   0xE9D5 0x010C      LDRD     R0,R1,[R5, #+48]
   \   0000006C   0x2200             MOVS     R2,#+0
   \   0000006E   0x.... 0x....      LDR.W    R3,??DataTable9_12  ;; 0xc072c000
   \   00000072   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000076   0xD204             BCS.N    ??PWM_1
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable9_12  ;; 0xc072c000
   \   0000007E   0xE9C5 0x010C      STRD     R0,R1,[R5, #+48]
     60            R->errSum+=R_err;
   \                     ??PWM_1: (+1)
   \   00000082   0xE9D6 0x230C      LDRD     R2,R3,[R6, #+48]
   \   00000086   0x.... 0x....      LDR.W    R4,??DataTable9_10
   \   0000008A   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \   0000008E   0x.... 0x....      BL       __aeabi_dadd
   \   00000092   0xE9C6 0x010C      STRD     R0,R1,[R6, #+48]
     61            if(R->errSum>300) R->errSum=300;
   \   00000096   0xE9D6 0x010C      LDRD     R0,R1,[R6, #+48]
   \   0000009A   0x2201             MOVS     R2,#+1
   \   0000009C   0x.... 0x....      LDR.W    R3,??DataTable9_11  ;; 0x4072c000
   \   000000A0   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000000A4   0xD804             BHI.N    ??PWM_2
   \   000000A6   0x2000             MOVS     R0,#+0
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable9_11  ;; 0x4072c000
   \   000000AC   0xE9C6 0x010C      STRD     R0,R1,[R6, #+48]
     62            if(R->errSum<-300)R->errSum=-300;
   \                     ??PWM_2: (+1)
   \   000000B0   0xE9D6 0x010C      LDRD     R0,R1,[R6, #+48]
   \   000000B4   0x2200             MOVS     R2,#+0
   \   000000B6   0x.... 0x....      LDR.W    R3,??DataTable9_12  ;; 0xc072c000
   \   000000BA   0x.... 0x....      BL       __aeabi_cdcmple
   \   000000BE   0xD204             BCS.N    ??PWM_3
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable9_12  ;; 0xc072c000
   \   000000C6   0xE9C6 0x010C      STRD     R0,R1,[R6, #+48]
     63            L_pwm=(L_err*L->kp + L->errSum*L->ki + (L_err-L->lastErr)*L->kd);
   \                     ??PWM_3: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable9_8
   \   000000CE   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   000000D2   0xE9D5 0x0100      LDRD     R0,R1,[R5, #+0]
   \   000000D6   0x.... 0x....      BL       __aeabi_dmul
   \   000000DA   0x4680             MOV      R8,R0
   \   000000DC   0x4689             MOV      R9,R1
   \   000000DE   0xE9D5 0x230C      LDRD     R2,R3,[R5, #+48]
   \   000000E2   0xE9D5 0x0102      LDRD     R0,R1,[R5, #+8]
   \   000000E6   0x.... 0x....      BL       __aeabi_dmul
   \   000000EA   0x4642             MOV      R2,R8
   \   000000EC   0x464B             MOV      R3,R9
   \   000000EE   0x.... 0x....      BL       __aeabi_dadd
   \   000000F2   0x4680             MOV      R8,R0
   \   000000F4   0x4689             MOV      R9,R1
   \   000000F6   0x.... 0x....      LDR.W    R2,??DataTable9_8
   \   000000FA   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000000FE   0xE9D5 0x2306      LDRD     R2,R3,[R5, #+24]
   \   00000102   0x.... 0x....      BL       __aeabi_dsub
   \   00000106   0xE9D5 0x2304      LDRD     R2,R3,[R5, #+16]
   \   0000010A   0x.... 0x....      BL       __aeabi_dmul
   \   0000010E   0x4642             MOV      R2,R8
   \   00000110   0x464B             MOV      R3,R9
   \   00000112   0x.... 0x....      BL       __aeabi_dadd
   \   00000116   0x.... 0x....      LDR.W    R2,??DataTable9_13
   \   0000011A   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     64            R_pwm=(R_err*R->kp + R->errSum*R->ki + (R_err-R->lastErr)*R->kd);
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable9_10
   \   00000122   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000126   0xE9D6 0x0100      LDRD     R0,R1,[R6, #+0]
   \   0000012A   0x.... 0x....      BL       __aeabi_dmul
   \   0000012E   0x4680             MOV      R8,R0
   \   00000130   0x4689             MOV      R9,R1
   \   00000132   0xE9D6 0x230C      LDRD     R2,R3,[R6, #+48]
   \   00000136   0xE9D6 0x0102      LDRD     R0,R1,[R6, #+8]
   \   0000013A   0x.... 0x....      BL       __aeabi_dmul
   \   0000013E   0x4642             MOV      R2,R8
   \   00000140   0x464B             MOV      R3,R9
   \   00000142   0x.... 0x....      BL       __aeabi_dadd
   \   00000146   0x4680             MOV      R8,R0
   \   00000148   0x4689             MOV      R9,R1
   \   0000014A   0x.... 0x....      LDR.W    R2,??DataTable9_10
   \   0000014E   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000152   0xE9D6 0x2306      LDRD     R2,R3,[R6, #+24]
   \   00000156   0x.... 0x....      BL       __aeabi_dsub
   \   0000015A   0xE9D6 0x2304      LDRD     R2,R3,[R6, #+16]
   \   0000015E   0x.... 0x....      BL       __aeabi_dmul
   \   00000162   0x4642             MOV      R2,R8
   \   00000164   0x464B             MOV      R3,R9
   \   00000166   0x.... 0x....      BL       __aeabi_dadd
   \   0000016A   0x.... 0x....      LDR.W    R2,??DataTable9_14
   \   0000016E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     65            L->lastErr=L_err;
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable9_8
   \   00000176   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   0000017A   0xE9C5 0x2306      STRD     R2,R3,[R5, #+24]
     66            R->lastErr=R_err;
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable9_10
   \   00000182   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000186   0xE9C6 0x2306      STRD     R2,R3,[R6, #+24]
     67            
     68            if(L_pwm>700)  L_pwm=700;
   \   0000018A   0x.... 0x....      LDR.W    R2,??DataTable9_13
   \   0000018E   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000192   0x2201             MOVS     R2,#+1
   \   00000194   0x.... 0x....      LDR.W    R3,??DataTable9_15  ;; 0x4085e000
   \   00000198   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000019C   0xD806             BHI.N    ??PWM_4
   \   0000019E   0x2000             MOVS     R0,#+0
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable9_15  ;; 0x4085e000
   \   000001A4   0x.... 0x....      LDR.W    R2,??DataTable9_13
   \   000001A8   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     69            if(R_pwm>700)  R_pwm=700;
   \                     ??PWM_4: (+1)
   \   000001AC   0x.... 0x....      LDR.W    R2,??DataTable9_14
   \   000001B0   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000001B4   0x2201             MOVS     R2,#+1
   \   000001B6   0x.... 0x....      LDR.W    R3,??DataTable9_15  ;; 0x4085e000
   \   000001BA   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000001BE   0xD806             BHI.N    ??PWM_5
   \   000001C0   0x2000             MOVS     R0,#+0
   \   000001C2   0x.... 0x....      LDR.W    R1,??DataTable9_15  ;; 0x4085e000
   \   000001C6   0x.... 0x....      LDR.W    R2,??DataTable9_14
   \   000001CA   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     70            if(L_pwm<-700)  L_pwm=-700;
   \                     ??PWM_5: (+1)
   \   000001CE   0x.... 0x....      LDR.W    R2,??DataTable9_13
   \   000001D2   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000001D6   0x2200             MOVS     R2,#+0
   \   000001D8   0x.... 0x....      LDR.W    R3,??DataTable9_16  ;; 0xc085e000
   \   000001DC   0x.... 0x....      BL       __aeabi_cdcmple
   \   000001E0   0xD206             BCS.N    ??PWM_6
   \   000001E2   0x2000             MOVS     R0,#+0
   \   000001E4   0x.... 0x....      LDR.W    R1,??DataTable9_16  ;; 0xc085e000
   \   000001E8   0x.... 0x....      LDR.W    R2,??DataTable9_13
   \   000001EC   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     71            if(R_pwm<-700)  R_pwm=-700;
   \                     ??PWM_6: (+1)
   \   000001F0   0x.... 0x....      LDR.W    R2,??DataTable9_14
   \   000001F4   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000001F8   0x2200             MOVS     R2,#+0
   \   000001FA   0x.... 0x....      LDR.W    R3,??DataTable9_16  ;; 0xc085e000
   \   000001FE   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000202   0xD206             BCS.N    ??PWM_7
   \   00000204   0x2000             MOVS     R0,#+0
   \   00000206   0x.... 0x....      LDR.W    R1,??DataTable9_16  ;; 0xc085e000
   \   0000020A   0x.... 0x....      LDR.W    R2,??DataTable9_14
   \   0000020E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     72            MotorL_Output((int)(L_pwm)); 
   \                     ??PWM_7: (+1)
   \   00000212   0x.... 0x....      LDR.W    R2,??DataTable9_13
   \   00000216   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   0000021A   0x.... 0x....      BL       __aeabi_d2iz
   \   0000021E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000220   0x.... 0x....      BL       MotorL_Output
     73            MotorR_Output((int)(-R_pwm));
   \   00000224   0x.... 0x....      LDR.W    R2,??DataTable9_14
   \   00000228   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   0000022C   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   00000230   0x.... 0x....      BL       __aeabi_d2iz
   \   00000234   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000236   0x.... 0x....      BL       MotorR_Output
     74          }
   \   0000023A   0xE8BD 0x8370      POP      {R4-R6,R8,R9,PC}  ;; return
     75          

   \                                 In section .text, align 2, keep-with-next
     76          void PWMne(u8 left_speed, u8 right_speed, PIDInfo *L, PIDInfo *R)   //后退的PID控制，都是输入正数，输入负数有奇怪的bug
     77          {
   \                     PWMne: (+1)
   \   00000000   0xE92D 0x4370      PUSH     {R4-R6,R8,R9,LR}
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
     78            L_err=left_speed-tacho0;
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable9_7
   \   00000010   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000014   0x1A40             SUBS     R0,R0,R1
   \   00000016   0x.... 0x....      BL       __aeabi_i2d
   \   0000001A   0x.... 0x....      LDR.W    R2,??DataTable9_8
   \   0000001E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     79            R_err=right_speed+tacho1;
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   00000026   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000002A   0xFA50 0xF084      UXTAB    R0,R0,R4
   \   0000002E   0x.... 0x....      BL       __aeabi_i2d
   \   00000032   0x.... 0x....      LDR.W    R2,??DataTable9_10
   \   00000036   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     80            L->errSum+=L_err;
   \   0000003A   0xE9D5 0x230C      LDRD     R2,R3,[R5, #+48]
   \   0000003E   0x.... 0x....      LDR.W    R4,??DataTable9_8
   \   00000042   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \   00000046   0x.... 0x....      BL       __aeabi_dadd
   \   0000004A   0xE9C5 0x010C      STRD     R0,R1,[R5, #+48]
     81            if(L->errSum>300) L->errSum=300;
   \   0000004E   0xE9D5 0x010C      LDRD     R0,R1,[R5, #+48]
   \   00000052   0x2201             MOVS     R2,#+1
   \   00000054   0x.... 0x....      LDR.W    R3,??DataTable9_11  ;; 0x4072c000
   \   00000058   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000005C   0xD804             BHI.N    ??PWMne_0
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable9_11  ;; 0x4072c000
   \   00000064   0xE9C5 0x010C      STRD     R0,R1,[R5, #+48]
     82            if(L->errSum<-300) L->errSum=-300;
   \                     ??PWMne_0: (+1)
   \   00000068   0xE9D5 0x010C      LDRD     R0,R1,[R5, #+48]
   \   0000006C   0x2200             MOVS     R2,#+0
   \   0000006E   0x.... 0x....      LDR.W    R3,??DataTable9_12  ;; 0xc072c000
   \   00000072   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000076   0xD204             BCS.N    ??PWMne_1
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable9_12  ;; 0xc072c000
   \   0000007E   0xE9C5 0x010C      STRD     R0,R1,[R5, #+48]
     83            R->errSum+=R_err;
   \                     ??PWMne_1: (+1)
   \   00000082   0xE9D6 0x230C      LDRD     R2,R3,[R6, #+48]
   \   00000086   0x.... 0x....      LDR.W    R4,??DataTable9_10
   \   0000008A   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \   0000008E   0x.... 0x....      BL       __aeabi_dadd
   \   00000092   0xE9C6 0x010C      STRD     R0,R1,[R6, #+48]
     84            if(R->errSum>300) R->errSum=300;
   \   00000096   0xE9D6 0x010C      LDRD     R0,R1,[R6, #+48]
   \   0000009A   0x2201             MOVS     R2,#+1
   \   0000009C   0x....             LDR.N    R3,??DataTable9_11  ;; 0x4072c000
   \   0000009E   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000000A2   0xD803             BHI.N    ??PWMne_2
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0x....             LDR.N    R1,??DataTable9_11  ;; 0x4072c000
   \   000000A8   0xE9C6 0x010C      STRD     R0,R1,[R6, #+48]
     85            if(R->errSum<-300)R->errSum=-300;
   \                     ??PWMne_2: (+1)
   \   000000AC   0xE9D6 0x010C      LDRD     R0,R1,[R6, #+48]
   \   000000B0   0x2200             MOVS     R2,#+0
   \   000000B2   0x....             LDR.N    R3,??DataTable9_12  ;; 0xc072c000
   \   000000B4   0x.... 0x....      BL       __aeabi_cdcmple
   \   000000B8   0xD203             BCS.N    ??PWMne_3
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x....             LDR.N    R1,??DataTable9_12  ;; 0xc072c000
   \   000000BE   0xE9C6 0x010C      STRD     R0,R1,[R6, #+48]
     86            L_pwm=(L_err*L->kp + L->errSum*L->ki + (L_err-L->lastErr)*L->kd);
   \                     ??PWMne_3: (+1)
   \   000000C2   0x....             LDR.N    R0,??DataTable9_8
   \   000000C4   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   000000C8   0xE9D5 0x0100      LDRD     R0,R1,[R5, #+0]
   \   000000CC   0x.... 0x....      BL       __aeabi_dmul
   \   000000D0   0x4680             MOV      R8,R0
   \   000000D2   0x4689             MOV      R9,R1
   \   000000D4   0xE9D5 0x230C      LDRD     R2,R3,[R5, #+48]
   \   000000D8   0xE9D5 0x0102      LDRD     R0,R1,[R5, #+8]
   \   000000DC   0x.... 0x....      BL       __aeabi_dmul
   \   000000E0   0x4642             MOV      R2,R8
   \   000000E2   0x464B             MOV      R3,R9
   \   000000E4   0x.... 0x....      BL       __aeabi_dadd
   \   000000E8   0x4680             MOV      R8,R0
   \   000000EA   0x4689             MOV      R9,R1
   \   000000EC   0x....             LDR.N    R2,??DataTable9_8
   \   000000EE   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000000F2   0xE9D5 0x2306      LDRD     R2,R3,[R5, #+24]
   \   000000F6   0x.... 0x....      BL       __aeabi_dsub
   \   000000FA   0xE9D5 0x2304      LDRD     R2,R3,[R5, #+16]
   \   000000FE   0x.... 0x....      BL       __aeabi_dmul
   \   00000102   0x4642             MOV      R2,R8
   \   00000104   0x464B             MOV      R3,R9
   \   00000106   0x.... 0x....      BL       __aeabi_dadd
   \   0000010A   0x....             LDR.N    R2,??DataTable9_13
   \   0000010C   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     87            R_pwm=(R_err*R->kp + R->errSum*R->ki + (R_err-R->lastErr)*R->kd);
   \   00000110   0x....             LDR.N    R0,??DataTable9_10
   \   00000112   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000116   0xE9D6 0x0100      LDRD     R0,R1,[R6, #+0]
   \   0000011A   0x.... 0x....      BL       __aeabi_dmul
   \   0000011E   0x4680             MOV      R8,R0
   \   00000120   0x4689             MOV      R9,R1
   \   00000122   0xE9D6 0x230C      LDRD     R2,R3,[R6, #+48]
   \   00000126   0xE9D6 0x0102      LDRD     R0,R1,[R6, #+8]
   \   0000012A   0x.... 0x....      BL       __aeabi_dmul
   \   0000012E   0x4642             MOV      R2,R8
   \   00000130   0x464B             MOV      R3,R9
   \   00000132   0x.... 0x....      BL       __aeabi_dadd
   \   00000136   0x4680             MOV      R8,R0
   \   00000138   0x4689             MOV      R9,R1
   \   0000013A   0x....             LDR.N    R2,??DataTable9_10
   \   0000013C   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000140   0xE9D6 0x2306      LDRD     R2,R3,[R6, #+24]
   \   00000144   0x.... 0x....      BL       __aeabi_dsub
   \   00000148   0xE9D6 0x2304      LDRD     R2,R3,[R6, #+16]
   \   0000014C   0x.... 0x....      BL       __aeabi_dmul
   \   00000150   0x4642             MOV      R2,R8
   \   00000152   0x464B             MOV      R3,R9
   \   00000154   0x.... 0x....      BL       __aeabi_dadd
   \   00000158   0x....             LDR.N    R2,??DataTable9_14
   \   0000015A   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     88            L->lastErr=L_err;
   \   0000015E   0x....             LDR.N    R0,??DataTable9_8
   \   00000160   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000164   0xE9C5 0x2306      STRD     R2,R3,[R5, #+24]
     89            R->lastErr=R_err;
   \   00000168   0x....             LDR.N    R0,??DataTable9_10
   \   0000016A   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   0000016E   0xE9C6 0x2306      STRD     R2,R3,[R6, #+24]
     90            
     91            if(L_pwm>700)  L_pwm=700;
   \   00000172   0x....             LDR.N    R2,??DataTable9_13
   \   00000174   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000178   0x2201             MOVS     R2,#+1
   \   0000017A   0x....             LDR.N    R3,??DataTable9_15  ;; 0x4085e000
   \   0000017C   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000180   0xD804             BHI.N    ??PWMne_4
   \   00000182   0x2000             MOVS     R0,#+0
   \   00000184   0x....             LDR.N    R1,??DataTable9_15  ;; 0x4085e000
   \   00000186   0x....             LDR.N    R2,??DataTable9_13
   \   00000188   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     92            if(R_pwm>700)  R_pwm=700;
   \                     ??PWMne_4: (+1)
   \   0000018C   0x....             LDR.N    R2,??DataTable9_14
   \   0000018E   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000192   0x2201             MOVS     R2,#+1
   \   00000194   0x....             LDR.N    R3,??DataTable9_15  ;; 0x4085e000
   \   00000196   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000019A   0xD804             BHI.N    ??PWMne_5
   \   0000019C   0x2000             MOVS     R0,#+0
   \   0000019E   0x....             LDR.N    R1,??DataTable9_15  ;; 0x4085e000
   \   000001A0   0x....             LDR.N    R2,??DataTable9_14
   \   000001A2   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     93            if(L_pwm<-700)  L_pwm=-700;
   \                     ??PWMne_5: (+1)
   \   000001A6   0x....             LDR.N    R2,??DataTable9_13
   \   000001A8   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000001AC   0x2200             MOVS     R2,#+0
   \   000001AE   0x....             LDR.N    R3,??DataTable9_16  ;; 0xc085e000
   \   000001B0   0x.... 0x....      BL       __aeabi_cdcmple
   \   000001B4   0xD204             BCS.N    ??PWMne_6
   \   000001B6   0x2000             MOVS     R0,#+0
   \   000001B8   0x....             LDR.N    R1,??DataTable9_16  ;; 0xc085e000
   \   000001BA   0x....             LDR.N    R2,??DataTable9_13
   \   000001BC   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     94            if(R_pwm<-700)  R_pwm=-700;
   \                     ??PWMne_6: (+1)
   \   000001C0   0x....             LDR.N    R2,??DataTable9_14
   \   000001C2   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000001C6   0x2200             MOVS     R2,#+0
   \   000001C8   0x....             LDR.N    R3,??DataTable9_16  ;; 0xc085e000
   \   000001CA   0x.... 0x....      BL       __aeabi_cdcmple
   \   000001CE   0xD204             BCS.N    ??PWMne_7
   \   000001D0   0x2000             MOVS     R0,#+0
   \   000001D2   0x....             LDR.N    R1,??DataTable9_16  ;; 0xc085e000
   \   000001D4   0x....             LDR.N    R2,??DataTable9_14
   \   000001D6   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     95            MotorL_Output((int)(L_pwm)); 
   \                     ??PWMne_7: (+1)
   \   000001DA   0x....             LDR.N    R2,??DataTable9_13
   \   000001DC   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000001E0   0x.... 0x....      BL       __aeabi_d2iz
   \   000001E4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001E6   0x.... 0x....      BL       MotorL_Output
     96            MotorR_Output((int)(R_pwm));
   \   000001EA   0x....             LDR.N    R2,??DataTable9_14
   \   000001EC   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000001F0   0x.... 0x....      BL       __aeabi_d2iz
   \   000001F4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001F6   0x.... 0x....      BL       MotorR_Output
     97          }
   \   000001FA   0xE8BD 0x8370      POP      {R4-R6,R8,R9,PC}  ;; return
     98          
     99          
    100          
    101          // =========== PIT 1 ISR =========== 
    102          // ====  UI Refreshing Loop  ==== ( Low priority ) 
    103          

   \                                 In section .text, align 2, keep-with-next
    104          void PIT1_IRQHandler(){
   \                     PIT1_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    105            
    106            PIT->CHANNEL[1].TFLG |= PIT_TFLG_TIF_MASK;
   \   00000002   0x....             LDR.N    R0,??DataTable9_17  ;; 0x4003711c
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000A   0x....             LDR.N    R1,??DataTable9_17  ;; 0x4003711c
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    107            
    108            pit1_time_tmp = PIT2_VAL();
   \   0000000E   0x....             LDR.N    R0,??DataTable9_18  ;; 0x40037124
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x....             LDR.N    R1,??DataTable9_19
   \   00000014   0x6008             STR      R0,[R1, #+0]
    109            
    110            //------------------------
    111            
    112            LED1_Tog();
   \   00000016   0x.... 0x....      BL       LED1_Tog
    113            
    114            UI_Operation_Service();
   \   0000001A   0x.... 0x....      BL       UI_Operation_Service
    115            
    116            Bell_Service();
   \   0000001E   0x.... 0x....      BL       Bell_Service
    117            
    118            UI_SystemInfo();
   \   00000022   0x.... 0x....      BL       UI_SystemInfo
    119            
    120            
    121            //------------ Other -------------
    122            
    123            pit1_time_tmp = pit1_time_tmp - PIT2_VAL();
   \   00000026   0x....             LDR.N    R0,??DataTable9_19
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x....             LDR.N    R1,??DataTable9_18  ;; 0x40037124
   \   0000002C   0x6809             LDR      R1,[R1, #+0]
   \   0000002E   0x1A40             SUBS     R0,R0,R1
   \   00000030   0x....             LDR.N    R1,??DataTable9_19
   \   00000032   0x6008             STR      R0,[R1, #+0]
    124            pit1_time_tmp = pit1_time_tmp / (g_bus_clock/10000); //100us
   \   00000034   0x....             LDR.N    R0,??DataTable9_20
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF242 0x7110      MOVW     R1,#+10000
   \   0000003C   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000040   0x....             LDR.N    R1,??DataTable9_19
   \   00000042   0x6809             LDR      R1,[R1, #+0]
   \   00000044   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   00000048   0x....             LDR.N    R1,??DataTable9_19
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    125            pit1_time = pit1_time_tmp;
   \   0000004C   0x....             LDR.N    R0,??DataTable9_19
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x....             LDR.N    R1,??DataTable9_21
   \   00000052   0x6008             STR      R0,[R1, #+0]
    126            
    127          }
   \   00000054   0xBD01             POP      {R0,PC}          ;; return
    128          
    129          
    130          
    131          //============ PIT 0 ISR  ==========
    132          // ====  Control  ==== ( High priority )
    133          

   \                                 In section .text, align 2, keep-with-next
    134          void PIT0_IRQHandler(){
   \                     PIT0_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    135            PIT->CHANNEL[0].TFLG |= PIT_TFLG_TIF_MASK;
   \   00000002   0x....             LDR.N    R0,??DataTable9_22  ;; 0x4003710c
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000A   0x....             LDR.N    R1,??DataTable9_22  ;; 0x4003710c
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    136            
    137            time_us += PIT0_PERIOD_US;
   \   0000000E   0x....             LDR.N    R0,??DataTable9_23
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF600 0x10C4      ADDW     R0,R0,#+2500
   \   00000016   0x....             LDR.N    R1,??DataTable9_23
   \   00000018   0x6008             STR      R0,[R1, #+0]
    138          
    139            
    140            
    141            //-------- System info -----
    142            
    143            pit0_time = PIT2_VAL();
   \   0000001A   0x....             LDR.N    R0,??DataTable9_18  ;; 0x40037124
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x....             LDR.N    R1,??DataTable9_24
   \   00000020   0x6008             STR      R0,[R1, #+0]
    144              
    145            battery = Battery();
   \   00000022   0x.... 0x....      BL       Battery
   \   00000026   0x....             LDR.N    R1,??DataTable9_25
   \   00000028   0x8008             STRH     R0,[R1, #+0]
    146            
    147            
    148            
    149            
    150            //-------- Get Sensers -----
    151            
    152            
    153            // Tacho
    154            Tacho0_Get();
   \   0000002A   0x.... 0x....      BL       Tacho0_Get
    155            Tacho1_Get();
   \   0000002E   0x.... 0x....      BL       Tacho1_Get
    156            
    157            // UI operation input
    158            ui_operation_cnt += tacho0;  // use tacho0 or tacho1
   \   00000032   0x....             LDR.N    R0,??DataTable9_26
   \   00000034   0x8800             LDRH     R0,[R0, #+0]
   \   00000036   0x....             LDR.N    R1,??DataTable9_7
   \   00000038   0x8809             LDRH     R1,[R1, #+0]
   \   0000003A   0x1808             ADDS     R0,R1,R0
   \   0000003C   0x....             LDR.N    R1,??DataTable9_26
   \   0000003E   0x8008             STRH     R0,[R1, #+0]
    159              
    160          
    161            
    162          #if (CAR_TYPE==0)   // Magnet and Balance
    163            
    164            Mag_Sample();
    165            
    166            gyro1 = Gyro1();
    167            gyro2 = Gyro2();
    168            
    169            
    170            
    171          #elif (CAR_TYPE==1)     // CCD
    172            
    173            CCD1_GetLine(ccd1_line);
    174            CCD2_GetLine(ccd2_line);
    175            
    176            
    177            
    178            
    179          #else               // Camera
    180            
    181            // Results of camera are automatically put in cam_buffer[].
    182            
    183            
    184          #endif
    185            
    186            
    187            
    188            // -------- Sensor Algorithm --------- ( Users need to realize this )
    189            
    190            // mag example : dir_error = Mag_Algorithm(mag_val);
    191            // ccd example : dir_error = CCD_Algorithm(ccd1_line,ccd2_line);
    192            // cam is complex. realize it in Cam_Algorithm() in Cam.c
    193            
    194            //-------- Controller --------
    195          
    196          
    197          
    198            
    199            // not balance example : dir_output = Dir_PIDController(dir_error);
    200            // example : get 'motorL_output' and  'motorR_output'
    201           
    202            //motorControl();
    203           
    204            // ------- Output -----
    205            
    206            
    207            // not balance example : Servo_Output(dir_output);  
    208            // example : MotorL_Output(motorL_output); MotorR_Output(motorR_output);
    209           //MotorL_Output(550); MotorR_Output(-550);
    210            
    211            
    212            // ------- UART ---------
    213            
    214            
    215            //UART_SendDataHead();
    216            //UART_SendData(battery);
    217            
    218            
    219            
    220            // ------- other --------
    221            
    222            pit0_time = pit0_time - PIT2_VAL();
   \   00000040   0x....             LDR.N    R0,??DataTable9_24
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0x....             LDR.N    R1,??DataTable9_18  ;; 0x40037124
   \   00000046   0x6809             LDR      R1,[R1, #+0]
   \   00000048   0x1A40             SUBS     R0,R0,R1
   \   0000004A   0x....             LDR.N    R1,??DataTable9_24
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    223            pit0_time = pit0_time / (g_bus_clock/1000000); //us
   \   0000004E   0x....             LDR.N    R0,??DataTable9_20
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0x....             LDR.N    R1,??DataTable9_27  ;; 0xf4240
   \   00000054   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000058   0x....             LDR.N    R1,??DataTable9_24
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   00000060   0x....             LDR.N    R1,??DataTable9_24
   \   00000062   0x6008             STR      R0,[R1, #+0]
    224            
    225          }
   \   00000064   0xBD01             POP      {R0,PC}          ;; return
    226          
    227          
    228          
    229          
    230          // ======= INIT ========
    231          

   \                                 In section .text, align 2, keep-with-next
    232          void PIT0_Init(u32 period_us)
    233          { 
   \                     PIT0_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    234                             
    235            SIM->SCGC6 |= SIM_SCGC6_PIT_MASK;
   \   00000004   0x....             LDR.N    R0,??DataTable9_28  ;; 0x4004803c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000000C   0x....             LDR.N    R1,??DataTable9_28  ;; 0x4004803c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    236            
    237            PIT->MCR = 0x00;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR.N    R1,??DataTable9_29  ;; 0x40037000
   \   00000014   0x6008             STR      R0,[R1, #+0]
    238           
    239            NVIC_EnableIRQ(PIT0_IRQn); 
   \   00000016   0x2044             MOVS     R0,#+68
   \   00000018   0x.... 0x....      BL       NVIC_EnableIRQ
    240            NVIC_SetPriority(PIT0_IRQn, NVIC_EncodePriority(NVIC_GROUP, 1, 2));
   \   0000001C   0x2202             MOVS     R2,#+2
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x2005             MOVS     R0,#+5
   \   00000022   0x.... 0x....      BL       NVIC_EncodePriority
   \   00000026   0x0001             MOVS     R1,R0
   \   00000028   0x2044             MOVS     R0,#+68
   \   0000002A   0x.... 0x....      BL       NVIC_SetPriority
    241          
    242            //period = (period_ns/bus_period_ns)-1
    243            PIT->CHANNEL[0].LDVAL |= period_us/100*(g_bus_clock/1000)/10-1; 
   \   0000002E   0x....             LDR.N    R0,??DataTable9_30  ;; 0x40037100
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x2164             MOVS     R1,#+100
   \   00000034   0xFBB4 0xF1F1      UDIV     R1,R4,R1
   \   00000038   0x....             LDR.N    R2,??DataTable9_20
   \   0000003A   0x6812             LDR      R2,[R2, #+0]
   \   0000003C   0xF44F 0x737A      MOV      R3,#+1000
   \   00000040   0xFBB2 0xF2F3      UDIV     R2,R2,R3
   \   00000044   0x4351             MULS     R1,R2,R1
   \   00000046   0x220A             MOVS     R2,#+10
   \   00000048   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000004C   0x1E49             SUBS     R1,R1,#+1
   \   0000004E   0x4308             ORRS     R0,R1,R0
   \   00000050   0x....             LDR.N    R1,??DataTable9_30  ;; 0x40037100
   \   00000052   0x6008             STR      R0,[R1, #+0]
    244            
    245            PIT->CHANNEL[0].TCTRL |= PIT_TCTRL_TIE_MASK |PIT_TCTRL_TEN_MASK;
   \   00000054   0x....             LDR.N    R0,??DataTable9_31  ;; 0x40037108
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   0000005C   0x....             LDR.N    R1,??DataTable9_31  ;; 0x40037108
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    246          
    247          };
   \   00000060   0xBD10             POP      {R4,PC}          ;; return
    248          

   \                                 In section .text, align 2, keep-with-next
    249          void PIT1_Init(u32 period_us)
    250          { 
   \                     PIT1_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    251                             
    252            SIM->SCGC6 |= SIM_SCGC6_PIT_MASK;
   \   00000004   0x....             LDR.N    R0,??DataTable9_28  ;; 0x4004803c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000000C   0x....             LDR.N    R1,??DataTable9_28  ;; 0x4004803c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    253            
    254            PIT->MCR = 0x00;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR.N    R1,??DataTable9_29  ;; 0x40037000
   \   00000014   0x6008             STR      R0,[R1, #+0]
    255           
    256            NVIC_EnableIRQ(PIT1_IRQn); 
   \   00000016   0x2045             MOVS     R0,#+69
   \   00000018   0x.... 0x....      BL       NVIC_EnableIRQ
    257            NVIC_SetPriority(PIT1_IRQn, NVIC_EncodePriority(NVIC_GROUP, 3, 0));
   \   0000001C   0x2200             MOVS     R2,#+0
   \   0000001E   0x2103             MOVS     R1,#+3
   \   00000020   0x2005             MOVS     R0,#+5
   \   00000022   0x.... 0x....      BL       NVIC_EncodePriority
   \   00000026   0x0001             MOVS     R1,R0
   \   00000028   0x2045             MOVS     R0,#+69
   \   0000002A   0x.... 0x....      BL       NVIC_SetPriority
    258          
    259            //period = (period_ns/bus_period_ns)-1
    260            PIT->CHANNEL[1].LDVAL |= period_us/100*(g_bus_clock/1000)/10-1; 
   \   0000002E   0x....             LDR.N    R0,??DataTable9_32  ;; 0x40037110
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x2164             MOVS     R1,#+100
   \   00000034   0xFBB4 0xF1F1      UDIV     R1,R4,R1
   \   00000038   0x....             LDR.N    R2,??DataTable9_20
   \   0000003A   0x6812             LDR      R2,[R2, #+0]
   \   0000003C   0xF44F 0x737A      MOV      R3,#+1000
   \   00000040   0xFBB2 0xF2F3      UDIV     R2,R2,R3
   \   00000044   0x4351             MULS     R1,R2,R1
   \   00000046   0x220A             MOVS     R2,#+10
   \   00000048   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000004C   0x1E49             SUBS     R1,R1,#+1
   \   0000004E   0x4308             ORRS     R0,R1,R0
   \   00000050   0x....             LDR.N    R1,??DataTable9_32  ;; 0x40037110
   \   00000052   0x6008             STR      R0,[R1, #+0]
    261            
    262            PIT->CHANNEL[1].TCTRL |= PIT_TCTRL_TIE_MASK |PIT_TCTRL_TEN_MASK;
   \   00000054   0x....             LDR.N    R0,??DataTable9_33  ;; 0x40037118
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   0000005C   0x....             LDR.N    R1,??DataTable9_33  ;; 0x40037118
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    263          
    264          }
   \   00000060   0xBD10             POP      {R4,PC}          ;; return
    265          

   \                                 In section .text, align 2, keep-with-next
    266          void PIT2_Init()
    267          { 
    268                             
    269            SIM->SCGC6 |= SIM_SCGC6_PIT_MASK;
   \                     PIT2_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable9_28  ;; 0x4004803c
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000008   0x....             LDR.N    R1,??DataTable9_28  ;; 0x4004803c
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    270            
    271            PIT->MCR = 0x00;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x....             LDR.N    R1,??DataTable9_29  ;; 0x40037000
   \   00000010   0x6008             STR      R0,[R1, #+0]
    272          
    273            //period = (period_ns/bus_period_ns)-1
    274            PIT->CHANNEL[2].LDVAL = 0xffffffff; 
   \   00000012   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000016   0x....             LDR.N    R1,??DataTable9_34  ;; 0x40037120
   \   00000018   0x6008             STR      R0,[R1, #+0]
    275            
    276            PIT->CHANNEL[2].TCTRL |= PIT_TCTRL_TEN_MASK;
   \   0000001A   0x....             LDR.N    R0,??DataTable9_35  ;; 0x40037128
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000022   0x....             LDR.N    R1,??DataTable9_35  ;; 0x40037128
   \   00000024   0x6008             STR      R0,[R1, #+0]
    277          
    278          }
   \   00000026   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0xE000ED18         DC32     0xe000ed18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x40140000         DC32     0x40140000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x........         DC32     R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x........         DC32     debug_dir

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x........         DC32     tacho0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x........         DC32     L_err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0x........         DC32     tacho1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x........         DC32     R_err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x4072C000         DC32     0x4072c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0xC072C000         DC32     0xc072c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x........         DC32     L_pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_14:
   \   00000000   0x........         DC32     R_pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_15:
   \   00000000   0x4085E000         DC32     0x4085e000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_16:
   \   00000000   0xC085E000         DC32     0xc085e000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_17:
   \   00000000   0x4003711C         DC32     0x4003711c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_18:
   \   00000000   0x40037124         DC32     0x40037124

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_19:
   \   00000000   0x........         DC32     pit1_time_tmp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_20:
   \   00000000   0x........         DC32     g_bus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_21:
   \   00000000   0x........         DC32     pit1_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_22:
   \   00000000   0x4003710C         DC32     0x4003710c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_23:
   \   00000000   0x........         DC32     time_us

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_24:
   \   00000000   0x........         DC32     pit0_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_25:
   \   00000000   0x........         DC32     battery

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_26:
   \   00000000   0x........         DC32     ui_operation_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_27:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_28:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_29:
   \   00000000   0x40037000         DC32     0x40037000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_30:
   \   00000000   0x40037100         DC32     0x40037100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_31:
   \   00000000   0x40037108         DC32     0x40037108

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_32:
   \   00000000   0x40037110         DC32     0x40037110

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_33:
   \   00000000   0x40037118         DC32     0x40037118

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_34:
   \   00000000   0x40037120         DC32     0x40037120

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_35:
   \   00000000   0x40037128         DC32     0x40037128

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   NVIC_EnableIRQ
       4   NVIC_EncodePriority
       0   NVIC_SetPriority
       0   PID_Init
       8   PIT0_IRQHandler
         8   -> Battery
         8   -> Tacho0_Get
         8   -> Tacho1_Get
       8   PIT0_Init
         8   -> NVIC_EnableIRQ
         8   -> NVIC_EncodePriority
         8   -> NVIC_SetPriority
       8   PIT1_IRQHandler
         8   -> Bell_Service
         8   -> LED1_Tog
         8   -> UI_Operation_Service
         8   -> UI_SystemInfo
       8   PIT1_Init
         8   -> NVIC_EnableIRQ
         8   -> NVIC_EncodePriority
         8   -> NVIC_SetPriority
       0   PIT2_Init
      24   PWM
        24   -> MotorL_Output
        24   -> MotorR_Output
        24   -> __aeabi_d2iz
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_dsub
        24   -> __aeabi_i2d
        24 __aeabi_cdcmple
        24 __aeabi_cdrcmple
      24   PWMne
        24   -> MotorL_Output
        24   -> MotorR_Output
        24   -> __aeabi_d2iz
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_dsub
        24   -> __aeabi_i2d
        24 __aeabi_cdcmple
        24 __aeabi_cdrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_14
       4  ??DataTable9_15
       4  ??DataTable9_16
       4  ??DataTable9_17
       4  ??DataTable9_18
       4  ??DataTable9_19
       4  ??DataTable9_2
       4  ??DataTable9_20
       4  ??DataTable9_21
       4  ??DataTable9_22
       4  ??DataTable9_23
       4  ??DataTable9_24
       4  ??DataTable9_25
       4  ??DataTable9_26
       4  ??DataTable9_27
       4  ??DataTable9_28
       4  ??DataTable9_29
       4  ??DataTable9_3
       4  ??DataTable9_30
       4  ??DataTable9_31
       4  ??DataTable9_32
       4  ??DataTable9_33
       4  ??DataTable9_34
       4  ??DataTable9_35
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
      56  L
       8  L_err
       8  L_pwm
      22  NVIC_EnableIRQ
      62  NVIC_EncodePriority
      38  NVIC_SetPriority
     154  PID_Init
     102  PIT0_IRQHandler
      98  PIT0_Init
      86  PIT1_IRQHandler
      98  PIT1_Init
      40  PIT2_Init
     574  PWM
     510  PWMne
      56  R
       8  R_err
       8  R_pwm
       4  pit0_time
       4  pit1_time
       4  pit1_time_tmp
       2  speed_set
       4  time_us

 
   162 bytes in section .bss
 1 928 bytes in section .text
 
 1 928 bytes of CODE memory
   162 bytes of DATA memory

Errors: none
Warnings: 2
